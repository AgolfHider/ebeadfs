#ЗАВДАННЯ 1 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

class WordLengthIterator:
    def __init__(self, words):
        self.words = words
        self.index = 0

    def __iter__(self):
        return self

    def __next__(self):
        if self.index < len(self.words):
            word_length = len(self.words[self.index])
            self.index += 1
            return word_length
        else:
            raise StopIteration


word_list = ["шо", "хеллоуворлд", "еыфаы", "генн", "йцкпирпд"]
iterator = WordLengthIterator(word_list)

print("Довжини слів:")
for length in iterator:
    print(length)


#ЗАВДАННЯ 3 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

def stepin_of_three():
    exponent = 0
    while True:
        yield 3 ** exponent
        exponent += 1


generator = stepin_of_three()

for _ in range(100):
    print(next(generator))


#ЗАВДАННЯ 5 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


def create_sum_counter():
    current_sum = 0

    def add_to_sum(value):
        nonlocal current_sum
        current_sum += value
        return current_sum

    return add_to_sum


counter = create_sum_counter()

print(counter(10))
print(counter(5))
print(counter(-3)) 
print(counter(5)) 
print(counter(6)) 
print(counter(-19)) 
print(counter(24)) 
print(counter(3)) 
